@page "/"
@using ETicaret_UI.Services
@using ETicaret_UI.ViewModals
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Ana Sayfa</PageTitle>


<div class="container my-4">
    <BlazoredToasts Position="ToastPosition.BottomRight"
                    Timeout="10"
                    ShowCloseButton="@true"
                    MaxToastCount="3"
                    IconType="IconType.FontAwesome"
                    SuccessClass="success-toast-override"
                    SuccessIcon="fa fa-thumbs-up"
                    ErrorIcon="fa fa-bug" />

    <div class="row g-4">
        @foreach (var item in pagedProducts)
        {
            <div class="col-md-3 col-sm-6">
                <div class="card h-100 shadow-sm product-card">
                    <img src="@(!string.IsNullOrEmpty(item.ImageUrl) ? item.ImageUrl : "https://via.placeholder.com/300x200?text=Ürün")"
                         class="card-img-top" alt="@item.Name" style="height:200px; object-fit:cover;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold">@item.Name</h5>
                        <p class="card-text text-muted small">@item.Description</p>
                        <p class="fw-bold text-success mt-auto">@item.Price.ToString("C")</p>
                        <p class="text-secondary small">Stok: @item.Stock</p>
                        <p class="text-secondary small">Mağaza: @item.ShopName</p>

                        <button class="btn btn-sm btn-primary mb-2" @onclick="() => AddToCart(item)">
                            <i class="bi bi-cart-plus"></i> Sepete Ekle
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mt-4">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <button class="page-link" @onclick="() => ChangePage(currentPage - 1)">Önceki</button>
            </li>
            @for (int i = 1; i <= totalPages; i++)
            {
                int pageSize = i;
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <button class="page-link" @onclick="() => ChangePage(pageSize)">@i</button>
                </li>
            }
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <button class="page-link" @onclick="() => ChangePage(currentPage + 1)">Sonraki</button>
            </li>
        </ul>
    </nav>
</div>

@code {

    List<ProductViewModel> products = new();
    [Inject] CartService CartService { get; set; }

    int currentPage = 1;
    int pageSize = 8; // sayfa başına ürün
    int totalPages => (int)Math.Ceiling((decimal)(products?.Count ?? 0) / pageSize);

    IEnumerable<ProductViewModel> pagedProducts =>
        products.Skip((currentPage - 1) * pageSize).Take(pageSize);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            products = await RequestManager.GetAsync<List<ProductViewModel>>(ApiSettings.Products);
            StateHasChanged();
        }
    }
    void ChangePage(int page)
    {
        if (page >= 1 && page <= totalPages)
        {
            currentPage = page;
        }
    }
    void AddToCart(ProductViewModel product)
    {
        CartService.AddToCart(product);
        ToastService.ShowSuccess($"{product.Name} sepete eklendi!");
    }
}
